<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="user-suite.xml" />
	<munit:test name="get-user-by-userid-sub-flow-test" doc:id="ce5455bf-f675-4fa5-a0d3-4dafb567cb79" description="Test for successful execution of retreiving user by userid">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request-canvas-sub-flow" doc:id="7025b42f-6f99-4807-8609-4b8cf098df3c" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1c936d91-1fad-4957-b3bf-d43f8951b0d9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getuser/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getuser/mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c35db9e3-6f67-416b-80f8-f86de93157d9" >
				<munit:payload value="#[readUrl('classpath://getuser/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getuser/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get-user-by-userid-sub-flow" doc:id="67462bf0-c0dc-45f7-a697-24bda6a5c361" name="get-user-by-userid-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2996c74b-4e4d-462c-95ca-ffc364776c65" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getuser::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
	<munit:test name="get-user-by-userid-sub-flow-test-error" doc:id="def22c8e-c9f8-4012-a1c9-025376ce7bb0" expectedErrorType="CANVAS_SAPI:GET_USER_FAILED" description="Test for server error to get user by userid request">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request-canvas-sub-flow" doc:id="6158d5fc-107e-4be8-8aa7-7a8b105f6700" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1c936d91-1fad-4957-b3bf-d43f8951b0d9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- "Internal Server Error"]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="isError" value="#[true]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f6988848-e68a-4d35-b72b-ebf1248428c3" >
				<munit:payload value="#[readUrl('classpath://getuser/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getuser/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get-user-by-userid-sub-flow" doc:id="7bcade34-6eaf-406c-a615-201d1f752787" name="get:\user\(userid):heaCanvasSapiConfig"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="e1500c38-5e8e-46e6-bc2a-9aa26f329cf6" actual="#[vars.httpStatus]" expected="#[500]"/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="get-user-by-criteria-sub-flow-test" doc:id="500ff59d-8c45-4172-ad4d-70e52d8f3201" description="Test for successful execution of retreiving user by criteria request">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request-canvas-sub-flow" doc:id="5d6ea331-c143-4aba-b19e-1619ab252104" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="request-canvas-sub-flow" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="039bc8da-3e94-4f5b-9b49-3d9bd84180a4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getuser/mock_payload_user.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getuser/mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="35bdf80f-5287-4bd3-ad62-dd97373809d9" >
				<munit:payload value="#[readUrl('classpath://getuser/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getuser/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get-user-by-criteria-sub-flow" doc:id="8962b5b1-b7c1-40b9-8f3a-afdc7d7d1df6" name="get-user-by-criteria-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a1f622a7-2aae-4952-bfb9-a110995e0688" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getuser::assert_payload_user
---
assert_payload_user::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
	<munit:test name="get-user-by-criteria-sub-flow-test-error" doc:id="9d812087-3d64-4529-9430-3e5845846544" expectedErrorType="CANVAS_SAPI:GET_USER_FAILED" description="Test for exception while retreiving user by criteria request">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request-canvas-sub-flow" doc:id="19dfbdb5-cad8-4e17-a979-a805b543843d" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="request-canvas-sub-flow" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="039bc8da-3e94-4f5b-9b49-3d9bd84180a4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- "Internal Server Error"]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="isError" value="#[true]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="2c98a3fb-112a-497e-8ba2-efccfa2a83dc" >
				<munit:payload value="#[readUrl('classpath://getuser/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getuser/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get-user-by-criteria-sub-flow" doc:id="203ea5c9-b488-4df5-a258-31367984b20d" name="get-user-by-criteria-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="4d351cd8-7ed1-474f-8098-c559fb23e24d" actual="#[vars.httpStatus]" expected="#[500]"/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="create-user-sub-flow-test" doc:id="56945301-1b53-4c37-a1c7-f8438cc19b13" description="Test for successful execution of creating a user">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request-canvas-sub-flow" doc:id="29859155-7dcb-48e2-907e-6c83ece651a1" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ef05781f-a800-47a3-9614-72847989a79b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://createuser/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://createuser/mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="17e18879-c0d6-4f15-8d49-4b9f702a4691" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createuser/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="create-user-sub-flow" doc:id="73b3926e-76df-4599-9538-2065b59faa11" name="post:\user:application\json:heaCanvasSapiConfig"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d04fbb98-952d-4d25-9822-d3a8da81c3da" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import createuser::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

	<munit:test name="create-user-sub-flow-test-error" doc:id="153f8825-6249-41ea-8304-e26828eecb33" expectedErrorType="CANVAS_SAPI:CREATE_USER_FAILED" description="Test for validating exception while creating a user">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request-canvas-sub-flow" doc:id="05fe43c2-fa82-4d5e-80eb-9433f9c33f6e" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ef05781f-a800-47a3-9614-72847989a79b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- "Internal Server Error"]' />
					<munit-tools:variables >
						<munit-tools:variable key="isError" value="#[true]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="43a6ea87-14a8-40cf-a689-7e1a2dabcebd" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createuser/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="create-user-sub-flow" doc:id="3ea32a84-428d-42bf-b2aa-4d468dd155bd" name="create-user-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="aa79eb38-2c18-4e5b-bc8c-552949eb7831" actual="#[vars.httpStatus]" expected="#[500]"/>
		</munit:validation>
	</munit:test>
</mule>
