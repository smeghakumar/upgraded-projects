<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="course-test-suite.xml" />
	<munit:test name="create-course-sub-flow-test" doc:id="c2b7c0e1-2f54-44ed-903c-f37016f13f35" description="Test to successful execution of create course in canvas">
		<munit:behavior >
			<munit-tools:mock-when doc:name="request-canvas-sub-flow" doc:id="646863b8-4a85-441d-ae61-4551a72a576f" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="request-canvas-sub-flow" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9a57e5ad-de6e-4ce4-89e8-02d08887fecb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://createcourse/create_course_mock_payload.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Request Payload" doc:id="b3133a43-5536-4f4c-9be1-f5795620f493" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createcourse/request_payload.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name=" create-course-sub-flow" doc:id="8828068b-4b9e-49f7-98f1-81b1a735024d" name="create-course-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Response Payload" doc:id="7702d512-2461-47ef-8125-4e472d11f91e" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import createcourse::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="create-course-exception-test" doc:id="8dd4d069-4fdf-49e6-8b60-24e92e01c85b" expectedErrorType="CANVAS_SAPI:CREATE_COURSE_FAILED" description="Test to validate the negative scenario of create course in canvas">
		<munit:behavior >
			<munit-tools:mock-when doc:name="request-canvas-sub-flow" doc:id="08ac0182-d11f-40ee-9250-4cd545f98302" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="request-canvas-sub-flow" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9a57e5ad-de6e-4ce4-89e8-02d08887fecb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["Error"]' mediaType="text/plain" />
					<munit-tools:variables >
						<munit-tools:variable key="isError" value="#[true]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Request Payload" doc:id="ef353c8e-6005-46c4-aa65-6e51a609eeb1" >
				<munit:payload value="#[output application/json --- readUrl('classpath://createcourse/request_payload.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name=" create-course-sub-flow" doc:id="c92a08b6-0c79-498e-880b-98e55bd4b7c2" name="create-course-sub-flow" />
		</munit:execution>
	</munit:test>
	<munit:test name="retrieve-course-by-field-sub-flow-test" doc:id="f6c26547-0537-49fd-bb1b-4f7605194c8b" description="Test to successful execution of get course from canvas by courseid">
		<munit:behavior >
			<munit-tools:mock-when doc:name="request-canvas-sub-flow" doc:id="2a6d3068-97c4-47e0-b2f0-1f51c18c11bf" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="request-canvas-sub-flow" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="60577df2-1218-4c78-9f74-a2a379ce5843" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://getcourse/get_course_response_payload.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="courseid" doc:id="123853c2-725a-4a0c-b50b-7260352a4f0c" >
				<munit:attributes value="#[attributes.queryParams.courseid]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="retrieve-course-by-field-sub-flow" doc:id="86420872-be0a-404e-84f7-f3454a63dcde" name="retrieve-course-by-field-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="response payload" doc:id="c4f45085-81d2-4304-a4d4-df519a7d856d" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcourse::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="course-exception-test" doc:id="f6b8ad23-5012-4df0-aabd-8551f8b8a49b" expectedErrorType="CANVAS_SAPI:COURSE_NOT_FOUND" description="Test to validate exception to Canvas call while retreiving course ">
		<munit:behavior >
			<munit-tools:mock-when doc:name="request-canvas-sub-flow" doc:id="28fe829f-da00-4644-964e-83c0dab18633" processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="request-canvas-sub-flow" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="60577df2-1218-4c78-9f74-a2a379ce5843" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["Error"]' mediaType="text/plain" />
					<munit-tools:variables >
						<munit-tools:variable key="isError" value="#[true]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="courseid" doc:id="4fe9833e-9db4-4a19-bf78-17be0df61026" >
				<munit:attributes value="#[attributes.queryParams.courseid]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="retrieve-course-by-field-sub-flow" doc:id="adc2d76f-bc32-4d1b-9068-320985c47c35" name="retrieve-course-by-field-sub-flow" />
		</munit:execution>
	</munit:test>

</mule>
